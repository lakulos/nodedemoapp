name: build_and_deploy

on: workflow_dispatch

permissions:
  id-token: write
  contents: read

jobs:
  build-to-acr:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4.1.7

    - uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set up Docker Buildx
      run: |
        docker buildx create --use
        docker buildx inspect --bootstrap

    - name: Build and push image only if changed
      run: |
        IMAGE_NAME=${{ secrets.ACR_USERNAME }}.azurecr.io/demonodejsapp
        IMAGE_TAG=${{ github.sha }}

        # Build the image and export the digest to a file
        docker buildx build --platform linux/amd64 -t $IMAGE_NAME:$IMAGE_TAG . --output "type=digest"

        # Extract the digest from the output
        IMAGE_DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' $IMAGE_NAME:$IMAGE_TAG | cut -d'@' -f2)

        # Check if the image with the same digest exists in ACR
        EXISTING_DIGEST=$(az acr repository show-manifests --name ${{ secrets.ACR_USERNAME }} --repository demonodejsapp --query "[?digest=='$IMAGE_DIGEST'].digest" -o tsv)

        if [ "$IMAGE_DIGEST" != "$EXISTING_DIGEST" ]; then
          # Only push the image if the digest doesn't already exist
          docker push $IMAGE_NAME:$IMAGE_TAG
        else
          echo "Image already exists in ACR with the same digest, skipping push."
        fi

  deploy-to-AKS:
    runs-on: ubuntu-latest
    needs: 
          build-to-acr
    steps:
    - name: Checkout
      uses: actions/checkout@v4.1.7

    - uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set up AKS credentials
      run: |
        az aks get-credentials --resource-group ${{ secrets.RG }} --name ${{ secrets.AKS }}

    - name: Deploy to AKS
      run: |
        sed -i 's|image: .*|image: '"${{ secrets.ACR_USERNAME }}.azurecr.io/demonodejsapp:${{ github.sha }}"'|' mavendeploy.yml
        kubectl apply -f mavendeploy.yml
        kubectl apply -f ingress.yml
